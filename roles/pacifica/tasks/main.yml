---
- name: Create Config Maps
  include_tasks: configmaps.yml
- name: Create Volume Lists
  include_tasks: volumelists.yml
- name: Define Pacifica Service Frontend
  community.kubernetes.k8s:
    definition:
      kind: Deployment
      apiVersion: apps/v1
      metadata:
        name: '{{ meta.name }}-{{ item.0.name }}'
        namespace: '{{ meta.namespace }}'
      spec:
        replicas: "{{ item.0.size | int }}"
        selector:
          matchLabels:
            app: "{{ item.0.name }}-frontend"
        template:
          metadata:
            labels:
              app: "{{ item.0.name }}-frontend"
          spec:
            containers:
              - name: "{{ item.0.name }}"
                image: "{{ item.0.image }}"
                env: "{{ item.0.env | default([]) }}"
                command:
                  - /usr/local/bin/uwsgi
                  - --http-socket
                  - "0.0.0.0:{{ item.0.port }}"
                  - --master
                  - --die-on-term
                  - -p
                  - '1'
                  - --module
                  - pacifica.{{ item.0.name }}.wsgi
                volumeMounts: "{{ item.1 }}"
                ports:
                  - containerPort: "{{ item.0.port | int }}"
                readinessProbe:
                  httpGet:
                    path: "{{ item.0.readiness_path }}"
                    port: "{{ item.0.port | int }}"
                  initialDelaySeconds: 5
                  periodSeconds: 5
            initContainers:
              - name: wait-for-services
                image: busybox:1.28
                command:
                  - sh
                  - -c
                  - |
                    {% for service in item.0.services %}
                    until nslookup {{ service }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do
                      echo waiting for {{ service }}; sleep 2;
                    done;
                    {% endfor %}
                    echo done;
              - name: "init-{{ item.0.name }}db"
                image: "{{ item.0.image }}"
                command:
                  - sh
                  - -c
                  - "/usr/local/bin/pacifica-{{ item.0.name }}-cmd dbsync && echo success; echo done;"
                volumeMounts: "{{ item.1 }}"
            volumes: "{{ item.2 }}"
  loop: "{{ k8s_pacifica_services | zip(volumeMount_list, volumes_list) | list }}"
